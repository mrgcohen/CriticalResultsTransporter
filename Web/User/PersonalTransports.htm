<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>Configure personal transports</title>
    <link rel="Stylesheet" href="../CSS/StyleSheet.css" type="text/css" />
	<link href="../CSS/modal.css" rel="stylesheet" type="text/css" />
	<script src="../javascript/Utility.js" type="text/javascript"></script>
    <script type="text/javascript" src="../javascript/jquery/jquery-1.3.2.min.js"></script> 
    <script type="text/javascript" src="../javascript/jquery/jquery.json-1.3.min.js"></script>  <!--Adds JSON serialization functionality to JQUERY-->
<!--    <script type="text/javascript" src="../javascript/webserviceCalls.js"></script> <!-- Handles all AJAX webservice calls. Uses Jquery and Json libs-->

    <script type="text/javascript" >
    	var MANUAL_TRANSPORT_NAME = "Manual";
    	var CRManager = parent.Manager;
    	var UserTransportManagement = {
    		User: null,
    		UserTransports: null,
    		Levels: null,
    		Transports: null,
    		SelectedUserTransport: null
    	};
		
        $(document).ready(function() {
			UserTransportManagement.User = parent.Manager.AuthenticatedUser;
//        	CRManager.WebClient.initialize();
        	//Call to setup the user transports table
        	CRManager.WebClient.getUserTransports(UserTransportManagement.User.UserName, UserTransportManagement.DisplayUserTransportsTable);

        	//Calls to setup the Create/Modify table
        	CRManager.WebClient.getAllTransports(UserTransportManagement.setTransportNamesDropDown);
        	CRManager.WebClient.getAllLevels(UserTransportManagement.setTransportLevels);
        });

        UserTransportManagement.setTransportNamesDropDown = function(transportData) {
        UserTransportManagement.Transports = transportData;
        	$("#transportNameDropDown").append($("<option id='-1' value=''\> </option>"));
        	for (var i = 0; i < UserTransportManagement.Transports.length; i++) {
        		if (UserTransportManagement.Transports[i].Name != MANUAL_TRANSPORT_NAME) {
        			$("#transportNameDropDown").append($("<option id=\"option" + i+1 + "\" value=\"" + UserTransportManagement.Transports[i].Name + "\">" + UserTransportManagement.Transports[i].FriendlyName + "</option>"));
        		}
        	}
        }

        UserTransportManagement.setTransportLevels = function(levelData) {
        	UserTransportManagement.Levels = levelData;
        	for (var i = 0; i < UserTransportManagement.Levels.length; i++) {
        		$("#transportLevelsCell").append("<input type='checkbox' id='" + UserTransportManagement.Levels[i].Uuid + "' value='" + UserTransportManagement.Levels[i].Name + "' disabled='disabled' /><span class='colorSpan' id='" + UserTransportManagement.Levels[i].ColorValue + "'>" + UserTransportManagement.Levels[i].Name + "</span><br />");
        	}
        	$(".colorSpan").each(function(index, item) { Utility.setLevelColor(item, item.id); });
        }

/*
        UserTransportManagement.getUserTransportsCallback = function(userTransportData) {
            var userTransports = eval('(' + userTransportData + ')');
            for (var i = 0; i < userTransports.length; i++) {
                var address = userTransports[i].Address;
                var levelArray = userTransports[i].Levels;
                var transportInfo = userTransports[i].Transport;  //Name, TransportUri
            }
            UserTransportManagement.DisplayUserTransportsTable(userTransports)
        }
        */

        UserTransportManagement.DisplayUserTransportsTable = function(userTransportsData) {
        	UserTransportManagement.UserTransports = userTransportsData;
        	for (var i = 0; i < UserTransportManagement.UserTransports.length; i++) {
        		if (UserTransportManagement.UserTransports[i].Transport.Name != MANUAL_TRANSPORT_NAME) {
        			var address = UserTransportManagement.UserTransports[i].Address;
        			var levelArray = UserTransportManagement.UserTransports[i].Levels;
        			var levelsInfo = "<ul>";
        			for (var j = 0; j < levelArray.length; j++) {
        				levelsInfo += "<li><span class='colorSpan' id=\"" + levelArray[j].ColorValue + "\">" + levelArray[j].Name + "</span><br /> " + levelArray[j].ShortDescription + "</li>";
        			}
        			levelsInfo += "</ul>";
        			var transportInfo = UserTransportManagement.UserTransports[i].Transport;  //Name, TransportUri
        			$("#personalTransportsTableBody").append("<tr id=\"transport\"" + i + "><td>" + transportInfo.FriendlyName
                                                        + "</td><td>" + address
                                                        + "</td><td>" + levelsInfo
                                                        + "</td><td>" + "<a href=\"#\" onclick=\"UserTransportManagement.showEditDetailsPopup('" + transportInfo.Name + "', '" + UserTransportManagement.UserTransports[i].Address + "', '" + UserTransportManagement.UserTransports[i].Transport.FriendlyName + "')\" >Modify</a>"
                                                        + "</td></tr>");
        		}
        	}
        	$('#personalTransportsTableBody tr:nth-child(odd)').addClass("oddRow");
        	$('#personalTransportsTableBody tr:nth-child(even)').addClass("evenRow");
        	$('.colorSpan').each(function(index, item) { Utility.setLevelColor(item, item.id); });
        }

        UserTransportManagement.updateAvailableLevels = function(dropDownList) {
        	var transportName = $(dropDownList).val()
        	if (transportName != "") {
        		$("#transportLevelsCell [type='checkbox']").attr('checked', false);
        		for (var i = 0; i < UserTransportManagement.Transports.length; i++) {
        			if (UserTransportManagement.Transports[i].Name == transportName) {
        				UserTransportManagement.enableSupportedLevelsCheckboxes(UserTransportManagement.Transports[i]);
        			}
        		}
        	}
        	else {
        		$("#transportLevelsCell [type='checkbox']").attr('disabled', true);
        	}
        }


        /***Create Transport Functions **/
        UserTransportManagement.createNewTransportPopup = function() {
            UserTransportManagement.Action = "Create";
            UserTransportManagement.ResetDetailData();
            $('#userTransportsDetailsTitle').html("New Transport");
            var transportName = $("#transportNameDropDown").val()
            //WebClient.getTransport(transportName, UserTransportManagement.enableSupportedLevelsCheckboxes);
            $("#modal").show();
        }

        UserTransportManagement.enableSupportedLevelsCheckboxes = function(transportData) {
            var transportInfo = transportData;
            var transportLevels = transportInfo.Levels;
            $("#transportLevelsCell [type='checkbox']").attr('disabled', true);
            for (var i = 0; i < transportLevels.length; i++) {
                $("#" + transportLevels[i].Uuid).attr("disabled", false);
            }
        }

        /** Edit Transport Functions **/
        UserTransportManagement.showEditDetailsPopup = function(transportName, address, friendlyName) {
        	UserTransportManagement.SelectedUserTransport = { TransportName: transportName, Address: address, FriendlyName: friendlyName  };
        	editTransportName = transportName;
        	UserTransportManagement.Action = "Edit";
        	$('#personalTransportDetailTableHeader').html("Edit Personal Transport");

        	$('#transportNameDropDown').attr("disabled", true);
        	$('#transportNameDropDown').val(transportName);
        	for (var i = 0; i < UserTransportManagement.Transports.length; i++) {
        		if (UserTransportManagement.Transports[i].Name == transportName) {
        			UserTransportManagement.enableSupportedLevelsCheckboxes(UserTransportManagement.Transports[i]);
        			UserTransportManagement.displayEditTransportData(UserTransportManagement.Transports[i]);
        		}
        	}
        }


        UserTransportManagement.displayEditTransportData = function(userTransportDataJSONStr) {
        	var selectedLevels = null;
        	for (var i = 0; i < UserTransportManagement.UserTransports.length; i++) {
        		if (UserTransportManagement.UserTransports[i].Address == UserTransportManagement.SelectedUserTransport.Address) {
        			selectedLevels = UserTransportManagement.UserTransports[i].Levels;
        		}
        	}
        	var userTransportData = userTransportDataJSONStr;
        	$('#transportAddressTextBox').val(UserTransportManagement.SelectedUserTransport.Address);
        	$("#transportLevelsCell [type='checkbox']").attr('checked', false);
        	for (var i = 0; i < selectedLevels.length; i++) {
        		$("#" + selectedLevels[i].Uuid).attr("checked", true);
        	}
        	//        	$("#modal").show();
        	parent.Manager.addModal("editTransport", $("#personalTransportDetail").html(), "Edit " + UserTransportManagement.SelectedUserTransport.FriendlyName);
        }
        
        /** Functions used for both Create and Modify **/

        UserTransportManagement.Submit = function() {
            if (UserTransportManagement.Action == "Create") {
                UserTransportManagement.createPersonalTransport();
            }
            else if (UserTransportManagement.Action == "Edit") {
                UserTransportManagement.updatePersonalTransport();
            }
        }

        UserTransportManagement.Cancel = function() {
            UserTransportManagement.ResetDetailData();
            $("div#modal").hide();
        }

        UserTransportManagement.ResetDetailData = function() {
            $('#transportNameDropDown').attr("disabled", false);
            $('#transportNameDropDown option:first').attr('selected', 'selected');
            $("#transportLevelsCell [type='checkbox']").attr('checked', false);
            $("#transportLevelsCell [type='checkbox']").attr('disabled', true);
            $("#transportAddressTextBox").val("");
            //$('#transportLevelDropDown >option').remove();
        }

        //Although this updates the database, it throws a self referencing loop error
        UserTransportManagement.createPersonalTransport = function() {
            var transportName = $("#transportNameDropDown").val();
            var address = $("#transportAddressTextBox").val();
            CRManager.WebClient.createUserTransport(UserTransportManagement.User.UserName, transportName, address,UserTransportManagement.createPersonalTransportCallback)
        }

        //Sets the levels for the newly created transport.
        UserTransportManagement.createPersonalTransportCallback = function() {
        	var transportName = $("#transportNameDropDown").val();
        	var levels = $("#transportLevelsCell [type='checkbox']");
        	var address = $("#transportAddressTextBox").val();
        	var levelNames = new Array();
        	for (var i = 0; i < levels.length; i++) {
        		if (levels[i].checked) {
        			levelNames[levelNames.length] = levels[i].value;
        		}
        	}
        	CRManager.WebClient.addLevelsToUserTransport(UserTransportManagement.User.UserName, transportName, address, levelNames, UserTransportManagement.addLevelsToUserTransportCallback);

        }
		
		UserTransportManagement.addLevelsToUserTransportCallback = function(){
			UserTransportManagement.ResetDetailData();
			$("div#modal").hide();
        	refreshPage();
		}

        UserTransportManagement.updatePersonalTransport = function(userID) {
            var transportName = $("#transportNameDropDown").val();
            var address = $("#transportAddressTextBox").val();
            CRManager.WebClient.updateUserTransport(UserTransportManagement.User.UserName, transportName, UserTransportManagement.SelectedUserTransport.Address, address, UserTransportManagement.createPersonalTransportCallback)
        }

        UserTransportManagement.updatePersonalTransportCallback = function(userID) {
            alert("update complete");
            var transportName = $("#transportNameDropDown").val();
            var levels = $("#transportLevelsCell [type='checkbox']");
            //We need a remove transport option before we can really do this
            /*
            for (var i = 0; i < levels.length; i++) {
            if (levels[i].checked) {
            WebClient.addTransportToLevel(levels[i].id, transportName)  //levels[i].id is the level Uuid
            }
            }
            */
            UserTransportManagement.ResetDetailData();
            $("div#modal").hide();
            refreshPage();
        }
        
    function refreshPage() {
        window.location.reload();
    }

    </script>

</head>

<body>
    <a href="#" onclick="UserTransportManagement.createNewTransportPopup();return false;" >Create New Contact</a>
    <!--Display all users and allow filtering of users -->
    <table id="personalTransportsTable" >
        <thead id="personalTransportsTableHeader">
            <tr>
	            <th align="left">Name</th>
	            <th align="left">Address</th>
	            <th align="left">Alert Level(s) supported</th>
	            <th align="left">Action</th>
	        </tr>
        </thead>
        <tbody id="personalTransportsTableBody">

        </tbody>
        <tfoot id="personalTransportsTableFooter"></tfoot>
    </table>
    
    <!--Create and Edit User Transports Modal Popup -->
    <div id="personalTransportDetail" class="hidden">
   <table id="personalTransportDetailTable">
                <thead id="personalTransportDetailTableHeader">
                    <tr><th colspan="2" id="userTransportsDetailsTitle">Create Contact Method</th></tr>
                </thead>
                <tbody id="userTransportsDetailsBody">
                    <tr><td align="right">Name:</td><td align="left"><select id="transportNameDropDown" onchange="UserTransportManagement.updateAvailableLevels(this)"></select></td></tr>
                    <tr><td align="right">Address:</td><td align="left"><input type="text" value="" id="transportAddressTextBox" /></td></tr>
                    <tr>
                        <td valign="top" align="right">Alert Level(s):</td>
                        <td align="left" id="transportLevelsCell">
                        </td>
                    </tr>
                </tbody>
                <tfoot id="personalTransportDetailTableFooter">
                    <tr>
                        <td>&nbsp;</td>
                        <td align="left">
                            <input type="button" id="cancelButton" onclick="UserTransportManagement.Cancel();return false;" value="Cancel" />
                            <input type="button" id="submitButton" onclick="UserTransportManagement.Submit();return false;" value="Submit" />
                        </td>
                    </tr>
                </tfoot>
             </table>
	</div>
</body>
</html>